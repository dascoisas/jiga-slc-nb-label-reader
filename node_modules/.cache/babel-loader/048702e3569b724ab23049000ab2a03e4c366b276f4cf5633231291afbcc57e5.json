{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { client } from \"../config\";\nconst route = '/rota/exemplo';\nexport function useMac() {\n  _s();\n  const [mac, setMac] = useState('');\n  const getBase = async codigo => {\n    return new Promise(resolve => {\n      setTimeout(async () => {\n        // if (codigo === '1234') {\n        //   resolve(true);\n        // } else {\n        //   resolve(false);\n        // }\n        try {\n          const response = await client.post(`${route}/${codigo}`);\n          if (response.status === 200) {\n            const getMac = response.data.mac;\n            resolve({\n              isValid: true,\n              getMac\n            });\n            setMac(getMac);\n          } else {\n            resolve({\n              isValid: false\n            });\n          }\n        } catch (error) {\n          console.error(\"Erro ao associar:\", error);\n          resolve({\n            isValid: false\n          });\n        }\n      }, 1000);\n    });\n  };\n  const salveAssociate = async (serial, iccid) => {\n    console.log(\"Botão clicado!\");\n    console.log(serial, iccid);\n    const data = {\n      mac,\n      serial,\n      iccid\n    };\n    // const response = await client.post(`${route}/create`, data);\n    // return response.status;\n    return 200;\n  };\n  return {\n    getBase,\n    salveAssociate,\n    mac\n  };\n}\n_s(useMac, \"rzKpyT/tn8jRQ6HC2dCADVCzLYw=\");","map":{"version":3,"names":["useState","client","route","useMac","_s","mac","setMac","getBase","codigo","Promise","resolve","setTimeout","response","post","status","getMac","data","isValid","error","console","salveAssociate","serial","iccid","log"],"sources":["/home/nouvenn-dev/Desktop/GitHub/SLC NB/slc-nb-associate/src/functions/function.js"],"sourcesContent":["import { useState } from \"react\";\nimport { client } from \"../config\";\n\nconst route = '/rota/exemplo';\n\n\nexport function useMac() {\n  const [mac, setMac] = useState('');\n  const getBase = async (codigo) => {\n    return new Promise((resolve) => {\n      setTimeout(async() => {\n        // if (codigo === '1234') {\n        //   resolve(true);\n        // } else {\n        //   resolve(false);\n        // }\n        try {\n          const response = await client.post(`${route}/${codigo}`);\n          if (response.status === 200) {\n            const getMac = response.data.mac;\n            resolve({ isValid: true, getMac });\n            setMac(getMac);\n          } else {\n            resolve({ isValid: false });\n          }\n        } catch (error) {\n          console.error(\"Erro ao associar:\", error);\n          resolve({ isValid: false });\n        }\n      }, 1000);\n    });\n  }\n\n  const salveAssociate = async (serial, iccid) => {\n    console.log(\"Botão clicado!\");\n    console.log(serial, iccid);\n    const data = {\n      mac,\n      serial,\n      iccid,\n    };\n    // const response = await client.post(`${route}/create`, data);\n    // return response.status;\n    return 200;\n  }\n\nreturn { getBase, salveAssociate, mac };\n}\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,MAAM,QAAQ,WAAW;AAElC,MAAMC,KAAK,GAAG,eAAe;AAG7B,OAAO,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAMO,OAAO,GAAG,MAAOC,MAAM,IAAK;IAChC,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;MAC9BC,UAAU,CAAC,YAAW;QACpB;QACA;QACA;QACA;QACA;QACA,IAAI;UACF,MAAMC,QAAQ,GAAG,MAAMX,MAAM,CAACY,IAAI,CAAC,GAAGX,KAAK,IAAIM,MAAM,EAAE,CAAC;UACxD,IAAII,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;YAC3B,MAAMC,MAAM,GAAGH,QAAQ,CAACI,IAAI,CAACX,GAAG;YAChCK,OAAO,CAAC;cAAEO,OAAO,EAAE,IAAI;cAAEF;YAAO,CAAC,CAAC;YAClCT,MAAM,CAACS,MAAM,CAAC;UAChB,CAAC,MAAM;YACLL,OAAO,CAAC;cAAEO,OAAO,EAAE;YAAM,CAAC,CAAC;UAC7B;QACF,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;UACzCR,OAAO,CAAC;YAAEO,OAAO,EAAE;UAAM,CAAC,CAAC;QAC7B;MACF,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC;EACJ,CAAC;EAED,MAAMG,cAAc,GAAG,MAAAA,CAAOC,MAAM,EAAEC,KAAK,KAAK;IAC9CH,OAAO,CAACI,GAAG,CAAC,gBAAgB,CAAC;IAC7BJ,OAAO,CAACI,GAAG,CAACF,MAAM,EAAEC,KAAK,CAAC;IAC1B,MAAMN,IAAI,GAAG;MACXX,GAAG;MACHgB,MAAM;MACNC;IACF,CAAC;IACD;IACA;IACA,OAAO,GAAG;EACZ,CAAC;EAEH,OAAO;IAAEf,OAAO;IAAEa,cAAc;IAAEf;EAAI,CAAC;AACvC;AAACD,EAAA,CAzCeD,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}