{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { client } from \"../config\";\nconst route = '/nlm/nb/implantation';\nexport function useMac() {\n  _s();\n  const [mac, setMac] = useState('');\n  const getBase = async codigo => {\n    if (codigo === '') return {\n      isValid: null\n    };\n    return new Promise(resolve => {\n      setTimeout(async () => {\n        try {\n          const response = await client.post(`${route}/${codigo}`);\n          if (response.status === 200) {\n            const getMac = response.data.mac;\n            console.log(getMac);\n            resolve({\n              isValid: true,\n              getMac\n            });\n            setMac(getMac);\n          } else {\n            resolve({\n              isValid: false\n            });\n          }\n        } catch (error) {\n          resolve({\n            isValid: false\n          });\n        }\n      }, 1000);\n    });\n  };\n  const salveAssociate = async (serial, iccid) => {\n    const data = {\n      mac,\n      serial,\n      iccid\n    };\n    const response = await client.post(`${route}/create`, data);\n    return response.status;\n  };\n  return {\n    getBase,\n    salveAssociate,\n    mac\n  };\n}\n_s(useMac, \"rzKpyT/tn8jRQ6HC2dCADVCzLYw=\");","map":{"version":3,"names":["useState","client","route","useMac","_s","mac","setMac","getBase","codigo","isValid","Promise","resolve","setTimeout","response","post","status","getMac","data","console","log","error","salveAssociate","serial","iccid"],"sources":["/home/nouvenn-dev/Desktop/GitHub/SLC NB/slc-nb-associate/src/functions/function.js"],"sourcesContent":["import { useState } from \"react\";\nimport { client } from \"../config\";\n\nconst route = '/nlm/nb/implantation';\n\n\nexport function useMac() {\n  const [mac, setMac] = useState('');\n\n  const getBase = async (codigo) => {\n    if(codigo === '') return { isValid: null };\n    return new Promise((resolve) => {\n      setTimeout(async() => {\n        try {\n          const response = await client.post(`${route}/${codigo}`);\n          if (response.status === 200) {\n            const getMac = response.data.mac;\n            console.log(getMac);\n            resolve({ isValid: true, getMac });\n            setMac(getMac);\n          } else {\n            resolve({ isValid: false });\n          }\n        } catch (error) {\n          resolve({ isValid: false });\n        }\n      }, 1000);\n    });\n  }\n\n  const salveAssociate = async (serial, iccid) => {\n    const data = {\n      mac,\n      serial,\n      iccid,\n    };\n    const response = await client.post(`${route}/create`, data);\n    return response.status;\n  }\n\n   return { getBase, salveAssociate, mac };\n}\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,MAAM,QAAQ,WAAW;AAElC,MAAMC,KAAK,GAAG,sBAAsB;AAGpC,OAAO,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAElC,MAAMO,OAAO,GAAG,MAAOC,MAAM,IAAK;IAChC,IAAGA,MAAM,KAAK,EAAE,EAAE,OAAO;MAAEC,OAAO,EAAE;IAAK,CAAC;IAC1C,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;MAC9BC,UAAU,CAAC,YAAW;QACpB,IAAI;UACF,MAAMC,QAAQ,GAAG,MAAMZ,MAAM,CAACa,IAAI,CAAC,GAAGZ,KAAK,IAAIM,MAAM,EAAE,CAAC;UACxD,IAAIK,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;YAC3B,MAAMC,MAAM,GAAGH,QAAQ,CAACI,IAAI,CAACZ,GAAG;YAChCa,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;YACnBL,OAAO,CAAC;cAAEF,OAAO,EAAE,IAAI;cAAEO;YAAO,CAAC,CAAC;YAClCV,MAAM,CAACU,MAAM,CAAC;UAChB,CAAC,MAAM;YACLL,OAAO,CAAC;cAAEF,OAAO,EAAE;YAAM,CAAC,CAAC;UAC7B;QACF,CAAC,CAAC,OAAOW,KAAK,EAAE;UACdT,OAAO,CAAC;YAAEF,OAAO,EAAE;UAAM,CAAC,CAAC;QAC7B;MACF,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC;EACJ,CAAC;EAED,MAAMY,cAAc,GAAG,MAAAA,CAAOC,MAAM,EAAEC,KAAK,KAAK;IAC9C,MAAMN,IAAI,GAAG;MACXZ,GAAG;MACHiB,MAAM;MACNC;IACF,CAAC;IACD,MAAMV,QAAQ,GAAG,MAAMZ,MAAM,CAACa,IAAI,CAAC,GAAGZ,KAAK,SAAS,EAAEe,IAAI,CAAC;IAC3D,OAAOJ,QAAQ,CAACE,MAAM;EACxB,CAAC;EAEA,OAAO;IAAER,OAAO;IAAEc,cAAc;IAAEhB;EAAI,CAAC;AAC1C;AAACD,EAAA,CAnCeD,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}