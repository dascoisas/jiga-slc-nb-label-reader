{"ast":null,"code":"import { useState } from \"react\";\nimport { client } from \"../config\";\nconst route = '/rota/exemplo';\nconst [mac, setMac] = useState('');\nexport async function getBase(codigo) {\n  // Simulação de consulta ao banco de dados\n  return new Promise(resolve => {\n    setTimeout(async () => {\n      if (codigo === '1234') {\n        resolve(true);\n      } else {\n        resolve(false);\n      }\n      // try {\n      //   // Simulando a chamada ao banco de dados\n      //   const response = await client.post(`${route}/${codigo}`);\n      //   if (response.status === 200) {\n      //     const getMac = response.data.mac; // Guardando o valor de getMac\n      //     resolve({ isValid: true, getMac });\n      //     setMac(getMac);\n      //   } else {\n      //     resolve({ isValid: false });\n      //   }\n      // } catch (error) {\n      //   console.error(\"Erro ao associar:\", error);\n      //   resolve({ isValid: false });\n      // }\n    }, 1000);\n  });\n}\n\n// no lugar de codigo aqui deve salvar o getMac\nexport async function salveAssociate(serial, iccid) {\n  console.log(\"Botão clicado!\");\n  console.log(serial, iccid);\n  const data = {\n    mac,\n    serial,\n    iccid\n  };\n  // const response =\n  await client.post(`${route}/create`, data);\n  const status = 200;\n  return status;\n}","map":{"version":3,"names":["useState","client","route","mac","setMac","getBase","codigo","Promise","resolve","setTimeout","salveAssociate","serial","iccid","console","log","data","post","status"],"sources":["/home/nouvenn-dev/Desktop/GitHub/SLC NB/slc-nb-associate/src/functions/function.js"],"sourcesContent":["import { useState } from \"react\";\nimport { client } from \"../config\";\n\nconst route = '/rota/exemplo';\nconst [mac, setMac] = useState('');\n\nexport async function getBase(codigo) {\n  // Simulação de consulta ao banco de dados\n  return new Promise((resolve) => {\n    setTimeout(async() => {\n      if (codigo === '1234') {\n        resolve(true);\n      } else {\n        resolve(false);\n      }\n      // try {\n      //   // Simulando a chamada ao banco de dados\n      //   const response = await client.post(`${route}/${codigo}`);\n      //   if (response.status === 200) {\n      //     const getMac = response.data.mac; // Guardando o valor de getMac\n      //     resolve({ isValid: true, getMac });\n      //     setMac(getMac);\n      //   } else {\n      //     resolve({ isValid: false });\n      //   }\n      // } catch (error) {\n      //   console.error(\"Erro ao associar:\", error);\n      //   resolve({ isValid: false });\n      // }\n    }, 1000);\n  });\n}\n\n// no lugar de codigo aqui deve salvar o getMac\nexport async function salveAssociate(serial, iccid) {\n  console.log(\"Botão clicado!\");\n  console.log(serial, iccid);\n  const data = {\n    mac,\n    serial,\n    iccid,\n  };\n  // const response =\n  await client.post(`${route}/create`, data);\n  const status = 200;\n  return status;\n}\n  "],"mappings":"AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,MAAM,QAAQ,WAAW;AAElC,MAAMC,KAAK,GAAG,eAAe;AAC7B,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;AAElC,OAAO,eAAeK,OAAOA,CAACC,MAAM,EAAE;EACpC;EACA,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;IAC9BC,UAAU,CAAC,YAAW;MACpB,IAAIH,MAAM,KAAK,MAAM,EAAE;QACrBE,OAAO,CAAC,IAAI,CAAC;MACf,CAAC,MAAM;QACLA,OAAO,CAAC,KAAK,CAAC;MAChB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACF,CAAC,EAAE,IAAI,CAAC;EACV,CAAC,CAAC;AACJ;;AAEA;AACA,OAAO,eAAeE,cAAcA,CAACC,MAAM,EAAEC,KAAK,EAAE;EAClDC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;EAC7BD,OAAO,CAACC,GAAG,CAACH,MAAM,EAAEC,KAAK,CAAC;EAC1B,MAAMG,IAAI,GAAG;IACXZ,GAAG;IACHQ,MAAM;IACNC;EACF,CAAC;EACD;EACA,MAAMX,MAAM,CAACe,IAAI,CAAC,GAAGd,KAAK,SAAS,EAAEa,IAAI,CAAC;EAC1C,MAAME,MAAM,GAAG,GAAG;EAClB,OAAOA,MAAM;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}